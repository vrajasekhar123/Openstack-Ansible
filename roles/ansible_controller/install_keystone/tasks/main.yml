---
  - name: Create database for keystone
    mysql_db: login_user=root login_password={{ mysql_root_password  }} name=keystone state=present
  - name: Create keystone user and grant privileges to keystone database.
    mysql_user: login_user=root login_password={{ mysql_root_password  }} name=keystone password={{ keystone_dbpass }} priv=*.*:ALL state=present host={{ item }}
    with_items:
     - "{{ controller_eth1 }}"
     - 127.0.0.1
     - localhost
     - ::1
  - name: Install keystone python-keystoneclient in controller node
    apt: name={{ item }} state=present force=yes
    with_items:
     - keystone
     - python-keystoneclient
  - name: Configure keystone.conf
    template: src=keystone.conf.j2 dest=/etc/keystone/keystone.conf
  - name: Populate the Identity service database in controller node
    shell: su -s /bin/sh -c "keystone-manage db_sync" keystone
##    notify: 
##     - Restart Keystone
  - name: Restart Keystone
    service: name=keystone state=restarted
  - name: Remove /var/lib/keystone/keystone.db
    file: path=/var/lib/keystone/keystone.db state=absent
  - name: Set crontab for token_flush
    cron: name="cronjob to for token flush" user=keystone special_time=hourly job="/usr/bin/keystone-manage token_flush >/var/log/keystone/keystone-tokenflush.log 2>&1"
  - name: Create admin-openrc.sh file
    template: src=admin-openrc.sh.j2 dest=/root/admin-openrc.sh
  - name: Create demo-openrc.sh file
    template: src=demo-openrc.sh.j2 dest=/root/demo-openrc.sh
  - name: Configure all tenants, users, roles, services and endpoints
    template: src=keystone-all.sh.j2 dest=/var/tmp/keystone-all.sh
  - command: bash /var/tmp/keystone-all.sh
